/* eslint-disable react/prop-types */
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Typography,
} from "@mui/material";
import { styled } from "@mui/material/styles";
import { tableCellClasses } from "@mui/material/TableCell";

const StyledTableCell = styled(TableCell)(({ theme }) => ({
  [`&.${tableCellClasses.head}`]: {
    backgroundColor: theme.palette.grey[800],
    color: theme.palette.common.white,
  },
  [`&.${tableCellClasses.body}`]: {
    fontSize: 14,
  },
}));

const setPastelRedBackgroundColor = (percentage) =>
  `rgba(255, 205, 210, ${percentage * 0.1})`;

const ConfusionMatrixTable = ({ title, data, labels }) => {
  return (
    <TableContainer component={Paper} sx={{ marginBottom: "20px" }}>
      <Table>
        <TableHead>
          {title && (
            <TableRow>
              <TableCell colSpan={labels?.length} align="center">
                <Typography fontWeight="600" variant="h6">
                  {title} - Confusion Matrix
                </Typography>
              </TableCell>
            </TableRow>
          )}
          <TableRow>
            <StyledTableCell>Actual / Predicted</StyledTableCell>
            {labels?.map((label) => (
              <StyledTableCell key={label} align="center">
                {label}
              </StyledTableCell>
            ))}
          </TableRow>
        </TableHead>
        <TableBody>
          {data?.map((row, rowIndex) => (
            <TableRow key={rowIndex}>
              <StyledTableCell>{labels[rowIndex]}</StyledTableCell>
              {row.map((value, colIndex) => {
                const total = row.reduce((r, a) => r + a, 0);
                const percentage = total > 0 ? (value * 100) / total : 0;

                return (
                  <StyledTableCell
                    key={colIndex}
                    align="center"
                    sx={
                      rowIndex === colIndex
                        ? {
                            color: "green",
                            fontWeight: 600,
                            backgroundColor: "#F4FBF4",
                          }
                        : {
                            backgroundColor:
                              setPastelRedBackgroundColor(percentage),
                          }
                    }
                  >
                    {value}
                  </StyledTableCell>
                );
              })}
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  );
};

export default ConfusionMatrixTable;
