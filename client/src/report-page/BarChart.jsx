/* eslint-disable react-hooks/exhaustive-deps */
import { BarChart } from "@mui/x-charts/BarChart";
import {
  Paper,
  Typography,
  Select,
  MenuItem,
  Box,
  FormControl,
} from "@mui/material";
import { colors } from "./constants";
import { useMemo, useState } from "react";

// eslint-disable-next-line react/prop-types
export default function Chart({ models, loading }) {
  const [metricType, setMetricType] = useState("accuracy");

  const data = useMemo(
    () =>
      Object.entries(models).reduce((result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails[metricType];
        return result;
      }, {}),
    [metricType, loading, Object.entries(models)?.length]
  );

  const labels = Object.keys(data);
  const series = Object.values(data);

  const min = Math.min(...series, 0.8) * 0.95;
  const randomNumber = Math.floor(Math.random() * 10);

  return (
    <Paper
      variant="outlined"
      style={{ padding: "16px", backgroundColor: "white" }}
    >
      <Box
        sx={{
          display: "flex",
          alignItems: "center",
          justifyContent: "space-between",
        }}
      >
        <Typography display="inline-block" fontWeight="600" variant="h6">
          Model Metrics
        </Typography>
        <FormControl sx={{ width: 200, ml: 2 }} size="small">
          <Select
            id="metric-type"
            value={metricType}
            onChange={(event) => setMetricType(event?.target?.value)}
            inputProps={{ "aria-label": "Without label" }}
          >
            <MenuItem value="accuracy">Accuracy</MenuItem>
            <MenuItem value="precision">Precision</MenuItem>
            <MenuItem value="recall">Recall</MenuItem>
            <MenuItem value="f1">F1 Score</MenuItem>
          </Select>
        </FormControl>
      </Box>
      <BarChart
        loading={loading}
        colors={[colors[randomNumber]]}
        slotProps={{ legend: { hidden: true } }}
        borderRadius={4}
        resolveSizeBeforeRender
        height={300}
        series={[{ data: series }]}
        xAxis={[{ data: labels, scaleType: "band", categoryGapRatio: 0.5 }]}
        yAxis={[{ min }]}
      />
    </Paper>
  );
}
