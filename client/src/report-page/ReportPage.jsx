/* eslint-disable react-hooks/exhaustive-deps */
import { Grid2, Typography, Paper, List, ListItem } from "@mui/material";
import { useParams } from "react-router-dom";
import DetectionResults from "./DetectionResults.jsx"; // Updated import
import BarChart from "./BarChart.jsx"; // Import the BarChart component
import MalwareDistChart from "./MalwareDistChart.jsx";
import PageLayout from "../components/PageLayout.jsx";
import DataService from "../services/data-service";
import { useEffect, useState, useMemo } from "react";

const ReportPage = () => {
  const { reportId } = useParams();
  const [loading, setLoading] = useState(false);
  const [report, setReport] = useState({});
  const [models, setModels] = useState({});

  useEffect(() => {
    setLoading(true);
    DataService.getReportById(reportId)
      .then((res) => {
        setReport(res?.data?.report ?? {});
        setModels(res?.data?.models ?? {});
      })
      .catch((err) => {
        console.log(err);
      })
      .finally(() => setLoading(false));
  }, []);

  const k = Object.keys(models)?.length;

  const recallData = useMemo(
    () =>
      Object.entries(models).reduce((result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.recall;
        return result;
      }, {}),
    [k]
  );

  const accuracyData = useMemo(
    () =>
      Object.entries(models).reduce((result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.accuracy;
        return result;
      }, {}),
    [k]
  );

  const f1Data = useMemo(
    () =>
      Object.entries(models).reduce((result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails?.f1;
        return result;
      }, {}),
    [k]
  );

  const precisionData = useMemo(
    () =>
      Object.entries(models).reduce((result, [modelName, modelDetails]) => {
        result[modelName] = modelDetails.precision;
        return result;
      }, {}),
    [k]
  );

  const distData = useMemo(
    () =>
      Object.entries(report?.malware_distribution || {}).reduce(
        (result, [modelName, modelValue]) => [
          ...result,
          { id: modelName, label: modelName, value: modelValue },
        ],
        []
      ),
    [k]
  );

  return (
    <PageLayout>
      <Typography variant="h4" sx={{ mb: 2 }}>
        Analytical Report
      </Typography>
      <Grid2 container spacing={2}>
        <Grid2 size={6}>
          <Paper
            variant="outlined"
            style={{
              padding: "16px",
              backgroundColor: "white",
              height: "calc(100% - 34px)",
            }}
          >
            <Typography fontWeight="600" variant="h6" gutterBottom>
              Metadata
            </Typography>
            <List sx={{ display: "flex", flexDirection: "column" }}>
              <ListItem sx={{ padding: 1, margin: 0 }}>
                <strong style={{ marginRight: "10px" }}>Name: </strong>
                {report["name"]}
              </ListItem>
              <ListItem sx={{ padding: 1, margin: 0 }}>
                <strong style={{ marginRight: "10px" }}>Created At: </strong>
                {report["created_at"]}
              </ListItem>
              <ListItem sx={{ padding: 1, margin: 0 }}>
                <strong style={{ marginRight: "10px" }}>Created By: </strong>
                {report["created_by"]}
              </ListItem>
              <ListItem sx={{ padding: 1, margin: 0 }}>
                <strong style={{ marginRight: "10px" }}>
                  Number of Malwares:{" "}
                </strong>
                {Object.keys(report["malware_distribution"] || {})?.length}
              </ListItem>
            </List>
          </Paper>
        </Grid2>
        <Grid2 size={6}>
          <BarChart loading={loading} label="Accuracy" data={accuracyData} />
        </Grid2>
        <Grid2 size={6}>
          <BarChart loading={loading} label="Precision" data={precisionData} />
        </Grid2>
        <Grid2 size={6}>
          <BarChart loading={loading} label="Recall" data={recallData} />
        </Grid2>
        <Grid2 size={6}>
          <BarChart loading={loading} label="F1 Score" data={f1Data} />
        </Grid2>

        <Grid2 size={6}>
          <MalwareDistChart loading={loading} data={distData} />
        </Grid2>
        <Grid2 size={6}>
          <DetectionResults />
        </Grid2>
      </Grid2>
    </PageLayout>
  );
};

export default ReportPage;
