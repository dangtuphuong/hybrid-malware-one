/* eslint-disable react-hooks/exhaustive-deps */
import { BarChart } from "@mui/x-charts/BarChart";
import {
  Paper,
  Typography,
  Select,
  MenuItem,
  Box,
  FormControl,
} from "@mui/material";
import { colors } from "./constants";
import { useMemo, useState } from "react";

const mapData = (series, metricType) => {
  const result = Object.keys(series[0] || {})?.map((k) => {
    if (!["accuracy", "macro avg", "weighted avg", "overall"].includes(k)) {
      return { data: [], label: k };
    } else {
      return null;
    }
  });

  series?.forEach((model) => {
    Object.values(model)?.forEach((item, i) => {
      if (result[i]?.data) {
        result[i].data.push(item[metricType] || 0);
      }
    });
  });

  return result?.filter((val) => val);
};

const getMin = (items) =>
  Math.min(...(items?.flatMap(({ data }) => data || []) || []), 0.8) * 0.95;

// eslint-disable-next-line react/prop-types
export default function Chart({ label, data, loading }) {
  const [metricType, setMetricType] = useState("accuracy");
  const labels = Object.keys(data);
  const series = Object.values(data);

  const result = useMemo(
    () => mapData(series, metricType),
    [labels?.length, metricType]
  );

  const min = useMemo(() => getMin(result), [labels?.length, metricType]);

  return (
    <Paper
      variant="outlined"
      style={{ padding: "16px", backgroundColor: "white" }}
    >
      <Box>
        <Typography
          display="inline-block"
          fontWeight="600"
          variant="h6"
          gutterBottom
        >
          {label}
        </Typography>
        <FormControl sx={{ width: 200, ml: 2 }} size="small">
          <Select
            id="metric-type"
            value={metricType}
            onChange={(event) => setMetricType(event?.target?.value)}
            inputProps={{ "aria-label": "Without label" }}
          >
            <MenuItem value="accuracy">Accuracy</MenuItem>
            <MenuItem value="precision">Precision</MenuItem>
            <MenuItem value="recall">Recall</MenuItem>
            <MenuItem value="f1-score">F1 Score</MenuItem>
          </Select>
        </FormControl>
      </Box>
      <BarChart
        loading={loading}
        slotProps={{ legend: { hidden: true } }}
        colors={colors}
        borderRadius={4}
        resolveSizeBeforeRender
        height={400}
        series={result}
        xAxis={[{ data: labels, scaleType: "band", categoryGapRatio: 0.2 }]}
        yAxis={[{ min }]}
      />
    </Paper>
  );
}
