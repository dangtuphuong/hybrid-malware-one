import mysql.connector
import json
from utils.connect_to_db import connect_to_db


def store_metrics(rf_metrics, xgb_metrics, hybrid_metrics, model_ids):
    try:
        rf_model_id = model_ids['rf']
        xgb_model_id = model_ids['xgb']
        hybrid_model_id = model_ids['hybrid']

        # Establish a connection to the database
        connection = connect_to_db()
        cursor = connection.cursor()

        # Insert model metrics into model_metrics table for each model
        insert_metrics_query = """
        INSERT INTO model_metrics (id, accuracy, `precision`, recall, f1, classification_report)
        VALUES (%s, %s, %s, %s, %s, %s)
        """

        # Insert metrics for Random Forest
        cursor.execute(insert_metrics_query, (
            rf_model_id,
            rf_metrics['accuracy'],
            rf_metrics['precision'],
            rf_metrics['recall'],
            rf_metrics['f1'],
            rf_metrics['classification_report']
        ))

        # Insert metrics for XGBoost
        cursor.execute(insert_metrics_query, (
            xgb_model_id,
            xgb_metrics['accuracy'],
            xgb_metrics['precision'],
            xgb_metrics['recall'],
            xgb_metrics['f1'],
            xgb_metrics['classification_report']
        ))

        # Insert metrics for Voting Ensemble
        cursor.execute(insert_metrics_query, (
            hybrid_model_id,
            hybrid_metrics['accuracy'],
            hybrid_metrics['precision'],
            hybrid_metrics['recall'],
            hybrid_metrics['f1'],
            hybrid_metrics['classification_report']
        ))

        # Create a report entry in the report table
        insert_report_query = """
        INSERT INTO report (rf_model_id, xgb_model_id, hybrid_model_id)
        VALUES (%s, %s, %s)
        """
        cursor.execute(insert_report_query, (rf_model_id,
                       xgb_model_id, hybrid_model_id))

        # Commit the changes
        connection.commit()

    except mysql.connector.Error as err:
        print(f"Error: {err}")
    finally:
        cursor.close()
        connection.close()
