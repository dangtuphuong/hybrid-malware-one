from mysql.connector import Error
from utils.connect_to_db import connect_to_db
from flask import jsonify
import joblib


def get_models():
    try:
        connection = connect_to_db()
        cursor = connection.cursor()

        # Fetch all reports
        reports_query = "SELECT * FROM report"
        cursor.execute(reports_query)
        reports = cursor.fetchall()

        # Get column names
        column_names = [desc[0] for desc in cursor.description]

        # Prepare the response
        reports_response = []
        for report in reports:
            reports_response.append(dict(zip(column_names, report)))

        # Map Models
        models = []

        if reports_response:
            for report in reports_response:
                name = report.get("name")
                created_at = report.get("created_at")
                hybrid_model_id = report.get("hybrid_model_id")
                rf_model_id = report.get("rf_model_id")
                xgb_model_id = report.get("xgb_model_id")

                if hybrid_model_id:
                    models.append(
                        {
                            "id": hybrid_model_id,
                            "label": f"Hybrid // {hybrid_model_id}",
                            "value": hybrid_model_id,
                            "report": f"{name} - {created_at}",
                        }
                    )
                if rf_model_id:
                    models.append(
                        {
                            "id": rf_model_id,
                            "label": f"Random Forest // {rf_model_id}",
                            "value": rf_model_id,
                            "report": f"{name} - {created_at}",
                        }
                    )
                if xgb_model_id:
                    models.append(
                        {
                            "id": xgb_model_id,
                            "label": f"XGBoost // {xgb_model_id}",
                            "value": xgb_model_id,
                            "report": f"{name} - {created_at}",
                        }
                    )

        # Load models from file
        try:
            saved_models = joblib.load("models_with_ids.pkl")
        except FileNotFoundError:
            saved_models = {}

        for model in models:
            saved_model = saved_models.get(model["id"])
            if saved_model:
                separator = saved_model.get("separator", ",")
                feature_columns = saved_model.get("feature_columns", [])
                model.update(
                    {
                        "separator": separator,
                        "feature_columns": separator.join(feature_columns),
                        "target_column": saved_model.get("target_column", None),
                        "type": saved_model.get("type"),
                    }
                )

        # Filter models that have matching IDs in saved models
        filtered_models = [
            model
            for model in models
            if any(id == model["id"] for id, details in saved_models.items())
        ]

        return jsonify({"items": filtered_models}), 200

    except Error as err:
        return jsonify({"error": str(err)}), 500
    finally:
        cursor.close()
        connection.close()
